<div class="@($"col {(IsInput ? "input" : "output")} {(SharingRow ? "sharing" : "")}")">
	<div class="name">
		<span class="@(IsInput ? "pl-3 pr-1" : "pr-3 pl-1")">@Port.Connection.Name</span>
	</div>

	<MudTooltip TooltipContent="GetDebugValueFragment(Port)" Placement="Placement.Top">
		<PortRenderer @key="Port" Port="Port" Class="rounded-full absolute" Style="@($"background-color: {Port.PortColor}")" />
	</MudTooltip>

	@if (IsInput && Port.Connection.Type.AllowTextboxEdit && Port.Links.Count == 0)
	{
		<MudTextField T="string" Class="border rounded pr-2" Value="@Port.Connection.TextboxValue" ValueChanged="x => GraphCanvas.OnTextboxValueChanged(Port, x)" Label="@Port.Connection.Name" Variant="Variant.Outlined" Margin="Margin.Dense" />
	}
</div>

@code {

	[Parameter]
	public GraphCanvas GraphCanvas { get; set; } = null!;

	[Parameter]
	public GraphNodeModel Node { get; set; } = null!;

	[Parameter]
	public GraphPortModel Port { get; set; } = null!;

	[Parameter]
	public bool IsInput { get; set; }

	[Parameter]
	public bool SharingRow { get; set; }


	private RenderFragment GetDebugValueFragment(GraphPortModel port) =>@<span>@GetDebugValue(port)</span>;

	private string GetDebugValue(GraphPortModel port)
	{
		if (!GraphCanvas.Graph.Project.IsLiveDebuggingEnabled || port.Connection.GraphIndex == -1)
			return port.Connection.Type.FriendlyName;

		var executor = GraphCanvas.DebuggedPathService.GraphExecutor;

		// Make sure the executor is not null
		if (executor == null)
			return port.Connection.Type.FriendlyName;

		var value = executor.Connections[port.Connection.GraphIndex];

		return value?.ToString() ?? "null";
	}
}
